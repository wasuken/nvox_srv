// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RSS{
  id Int @id @default(autoincrement()) @map("rss_id")
  rssItems RSSItem[] @relation("RSS_RSSItem_rss")
  url String
  name String?
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  @@map("rss")
}

model RSSItem {
  id Int @id @default(autoincrement()) @map("rss_item_id")
  rss_id Int
  RSS_RSSItem_rss RSS @relation("RSS_RSSItem_rss", fields: [rss_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tags RSSItemTag[] @relation("RSSItem_RSSItemTag_rss_item")
  wavpath String?
  voice_downloaded Boolean @default(false)
  title String
  link String @unique
  imageurl String @default("")
  desc String? @default("")
  shortdesc String? @default("")
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  @@map("rss_item")
}

model RSSItemTag {
  id Int @id @default(autoincrement()) @map("rss_item_tag_id")
  name String
  rss_item_id Int
  RSSItem_RSSItemTag_rss_item RSSItem @relation("RSSItem_RSSItemTag_rss_item", fields: [rss_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  @@map("rss_item_tag")
}

model Naro {
  id Int @id @default(autoincrement()) @map("naro_id")
  title String
  ncode String @unique
  totalPage Int
  works NaroWork[] @relation("Naro_NaroWork")
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  @@map("naro")
}

model NaroWork {
  id Int @id @default(autoincrement()) @map("naro_work_id")
  title String
  contents String @db.Text
  html String @db.Text
  wavs NaroWorkWav[] @relation("NaroWork_NaroWorkWav")
  no Int
  naro_id Int
  Naro_NaroWork Naro @relation("Naro_NaroWork", fields: [naro_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  @@map("naro_work")
}

model NaroWorkWav {
  id Int @id @default(autoincrement()) @map("naro_work_wav_id")
  naro_work_id Int
  NaroWork_NaroWorkWav NaroWork @relation("NaroWork_NaroWorkWav", fields: [naro_work_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  seq_no Int
  contents String
  wavpath String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  @@map("naro_work_wav")
}

// 学習
// 例：ネスペ、Python、DeepLearning等
model Learn {
  id Int @id @default(autoincrement()) @map("learn_id")
  historyList LearnHistory[] @relation("Learn_History")
  name String
  description String
}

// 学習履歴
// 例：2020-10-10 00:00:00に行った学習内容
model LearnHistory {
  id Int @id @default(autoincrement()) @map("learn_history_id")
  learn_id Int
  Learn_History Learn @relation("Learn_History", fields: [learn_id], references: [ id ], onDelete: NoAction, onUpdate: NoAction)
  items LearnHistoryItem[] @relation("LearnHistory_Item")
  summary String?
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
}

// 学習履歴アイテム
// 学習内容の内の一つアイテム
model LearnHistoryItem {
  id Int @id @default(autoincrement()) @map("learn_history_item_id")
  learn_history_id Int
  LearnHistory_Item LearnHistory @relation("LearnHistory_Item", fields: [learn_history_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  wavs LearnHistoryItemWav[] @relation("LearnHistoryItem_Wav")
  text String
}

model LearnHistoryItemWav {
  id Int @id @default(autoincrement()) @map("learn_history_item_wav_id")
  learn_history_item_id Int
  LearnHistoryItem_Wav LearnHistoryItem @relation("LearnHistoryItem_Wav", fields: [learn_history_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  wavpath String
  contents String
}
